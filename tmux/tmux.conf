# ==========================
# ===  General settings  ===
# ==========================

set-option -g mouse on

# reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display '~/.tmux.conf sourced'

#set-option -g default-terminal "screen-256color" # colors!
set-option -g default-terminal "xterm-256color" # colors!

# Apply Tc for 24 bit colors
set-option -ga terminal-overrides ",*256col*:Tc"

# set-option parent terminal title to reflect current window in tmux session
set-option -g set-titles on
set-option -g set-titles-string "#I:#W"

setw -g automatic-rename on   # rename window to reflect current program
set-option -g renumber-windows on # renumber windows when a window is closed

# enable vi mode
set-option -g mode-keys vi

set-option -sg escape-time 0

# Start windows and panes at 1, not 0
set-option -g base-index 1
setw -g pane-base-index 1

# set-option history limit to 3000
set-option -g history-limit 10000


# ==========================
# ===   Key bindings     ===
# ==========================
set-option -g set-clipboard on

bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi r send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-pipe 'wl-copy' \; display-message "copied to system clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "wl-copy"
bind-key p run "wl-paste | tmux load-buffer - ; tmux paste-buffer"
bind -n C-S-v run "wl-paste | tmux load-buffer - ; tmux paste-buffer"

if-shell \
'test "$(uname -s)" = "Darwin"' \
'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"'

if-shell \
'test "$(uname -s)" = "Darwin"' \
'bind-key -T copy-mode-vi y send -X copy-pipe "pbcopy" \; display-message "copied to system clipboard"'

# More friendly split pane
# bind-key h split-window -h
# bind-key v split-window -v

# Smart pane switching with awareness of Vim splits.
# https://github.com/aserowy/tmux.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Use shift + arrow key to move between windows in a session
bind-key -n C-S-Left  previous-window
bind-key -n C-S-Right next-window

# new pane/window and retain cwd
bind-key '"' split-window -v -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# Toggle statusbar
bind-key S set status

# Moving window
bind-key -n M-p swap-window -t +1\; select-window -t +1
bind-key -n M-n swap-window -t -1\; select-window -t -1
#bind-key -n M-p swap-window -t -1
#bind-key -n M-n swap-window -t +1

# Kill pane without confirmation
bind-key x kill-pane

# Resize panes, shift arrow keys for smaller increments and control arrow key for larger
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# Easily swap a pane (targeted by pane number) with the current pane
bind-key u display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# ==========================
# ===  Display settings  ===
# ==========================

# activity
set-option -g monitor-activity on
set-option -g visual-activity off

set-option -g status-style 'bg=default'

set-option -g status-left '#S #{?client_prefix,#[fg=colour196],}Â» '
set-option -g status-right '%a %d %B | %H:%M #{tmux_mode_indicator}'
set-option -g status-right-length 50
set-option -g status-left-length 20

setw -g window-status-format '#[bg=default,fg=colour255,dim]#I:#W#{?window_activity_flag, #[fg=brightred bright],}#F'
setw -g window-status-current-format '#[bg=default,fg=colour255,bold]#I:#W#[fg=colour118, bold]#F'

set-option -g window-status-activity-style 'bg=0'
set-option -g status-bg default # Sets the status bar background

set-option -g focus-events on


# ==========================
# ===     Plugins        ===
# ==========================
set-option -g @plugin 'tmux-plugins/tpm'

# tmux-fzf
set-option -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY="C-f"
bind-key "C-s" run-shell -b "~/.config/tmux/plugins/tmux-fzf/scripts/session.sh attach"
bind-key "C-p" run-shell -b "~/.config/tmux/plugins/tmux-fzf/scripts/pane.sh switch"
bind-key "C-w" run-shell -b "~/.config/tmux/plugins/tmux-fzf/scripts/window.sh switch"

# Suspend local tmux when running tmux nested
set-option -g @plugin 'MunifTanjim/tmux-suspend'
set-option -g @plugin 'MunifTanjim/tmux-mode-indicator'

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

run '~/.config/tmux/plugins/tpm/tpm
